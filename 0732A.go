package main

import "fmt"

// https://codeforces.com/problemset/problem/732/A
// комментарии к решению
// Десятичных монет неограниченное количество, поэтому нас интересует
// строго десятичный остаток стоимости, что приводит к конечному кол-ву
// решений. Перебираем все на листочке и выписываем двумерный массив решений
func taskSolution(k int, r int) int {
	counts := [][]int{
		{1, 1, 1, 1, 1, 1, 1, 1, 1},  // k%10 = 0
		{1, 2, 3, 4, 5, 6, 7, 8, 9},  // k%10 = 1
		{5, 1, 5, 2, 5, 3, 5, 4, 5},  // k%10 = 2
		{7, 4, 1, 8, 5, 2, 9, 6, 3},  // k%10 = 3
		{5, 3, 5, 1, 5, 4, 5, 2, 5},  // k%10 = 4
		{2, 2, 2, 2, 1, 2, 2, 2, 2},  // k%10 = 5
		{10, 2, 5, 4, 5, 1, 5, 3, 5}, // k%10 = 6
		{3, 6, 9, 2, 5, 8, 1, 4, 7},  // k%10 = 7
		{5, 4, 5, 3, 5, 2, 5, 1, 5},  // k%10 = 8
		{9, 8, 7, 6, 5, 4, 3, 2, 1},  // k%10 = 9
	}

	return counts[k%10][r-1]
}

func main() {
	var k, r int
	if _, err := fmt.Scan(&k, &r); err != nil {
		panic(err)
	}

	fmt.Println(taskSolution(k, r))
}
